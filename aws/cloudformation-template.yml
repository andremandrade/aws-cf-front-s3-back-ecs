Resources:
  WebSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebSiteBucket
                - /*
      Bucket: !Ref WebSiteBucket
 
  CF01APIImageRepository: 
    Type: AWS::ECR::Repository
    Properties: 
        RepositoryName: "cf01-api-service"
        RepositoryPolicyText: 
            Version: "2012-10-17"
            Statement: 
              - Sid: AllowPushPull
                Effect: Allow
                Principal: 
                    AWS: 
                    - "arn:aws:iam::380095960694:user/andre"
                Action: 
                    - "ecr:GetDownloadUrlForLayer"
                    - "ecr:BatchGetImage"
                    - "ecr:BatchCheckLayerAvailability"
                    - "ecr:PutImage"
                    - "ecr:InitiateLayerUpload"
                    - "ecr:UploadLayerPart"
                    - "ecr:CompleteLayerUpload"
                    - "ecr:GetAuthorizationToken"
  CF01ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: CF01ECSCluster
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1

  CF01TaskDefinitionAPI: 
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        - 
          Name: 
            Ref: "CF01API"
          MountPoints: 
            - 
              SourceVolume: "CF01API"
              ContainerPath: "/service"
          Image: "380095960694.dkr.ecr.us-west-2.amazonaws.com/cf01-api-service:latest"
          Cpu: 256
          PortMappings: 
            - 
              ContainerPort: 8080
              HostPort: 8080
          Memory: 512
          Essential: true

  CF01ECSServiceAPI: 
    Type: AWS::ECS::Service
    Properties: 
      Cluster: 
        Ref: "CF01ECSCluster"
      DesiredCount: 1
      TaskDefinition: 
        Ref: "CF01TaskDefinitionAPI"

Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - WebSiteBucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - WebSiteBucket
          - DomainName
    Description: Name of S3 bucket to hold website content
  DockerRegistryURL:
    Value: !GetAtt
      - CF01APIImageRepository
      - RepositoryUri
  